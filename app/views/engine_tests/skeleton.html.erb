<script>
  <%content_for :global do%>
    var skeleton;
  <%end%>
  
<%content_for :init do%>
  skeleton = new Skeleton({scale:0.75,bones:{name     :"one",
                                             offset   :[0,0,0],
                                             joints   :[{name   :"two",
                                                         offset  :[0,1,0],
                                                         joints  :[{name: "three",
                                                                    offset: [1,0,0],
                                                                    joints: [{name: "four",
                                                                              offset:[0,-1,0],
                                                                              joints:[{name: "five",
                                                                                       offset: [0.25,0,0],
                                                                                       joints:[]}]}]}]}]}});

  /*
    Notice that in the following animation, all rotations and translations are in absolute coordinates. This means
    that in order to produce "no change" from one frame to the next, the previous value must be carried over. "Zero"
    would produce a movement back to the skeleton's "rest" state.
   */

  var r = Math.PI/2;
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [r,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,r,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,r, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, r,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,r,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,r, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, r,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,r,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,r, 0,0,0]);
  skeleton.addKeyframe(   1, [ 0,0,0], [0,0,0, 0,0,0, 0,0,0, 0,0,0]);

  skeleton.play();

  world.camera.move(-5);
  world.addObject(skeleton);
<%end%>
        
<%content_for :render do%>
  world.render();
<%end%>
</script>

<p>
  This test demonstrates skeletal movement. The skeleton in this example has 5 nodes: one at the origin, one just above
  it, and so on. The animation rotates 3 of those bones 3 times apiece: first 90 degrees on its X axis, then 90 degrees
  on its Y axis, and finally 90 degrees on its Z axis. The animation returns to its resting state between each rotation.
</p>

<p>
  The lines drawn on the screen are a visual aid. They connect one bone to another. A given bone is a single point
  in space, and it takes two points to make a line, hence there are 4 lines drawn. Each endpoint on a line represents a
  single bone in the skeleton.
</p>

<p>
  If you look carefully (or not-so-carefully on a slower machine...) you'll notice a slight pause at various intervals.
  It gets more noticeable with more complicated animations (see the <%=link_to 'Animation Editor', :action => "animation_editor"%>).
  This is most likely the JavaScript garbage collector doing its thing, because the animation creates a lot of
  temporary matrices when transforming from one frame to the next. I'm 100% positive that this can be addressed by
  simply using fewer (or no) temporary objects -- I just haven't had the time to implement the changes.
</p>

<a href="#" onclick="if (skeleton.playing) skeleton.stop(); else skeleton.play(); return false;">Play / Stop</a>