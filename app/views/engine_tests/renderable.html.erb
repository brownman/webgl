<script>
  <%content_for :global do%>
    var world = new World();
    var renderable = new Renderable(
      // init
      function(vertices, colors, textureCoords, normals, indices) {
        vertices.push( 0,  1, 0);
        vertices.push(-1, -1, 0);
        vertices.push( 1, -1, 0);
        
        textureCoords.push(0.5, 0);
        textureCoords.push(0, 1);
        textureCoords.push(1, 1);
      },
            
      // update
      function() {
        this.orientation.rotateView(0.15, 0);
      }
    );
  <%end%>
          
  <%content_for :init do%>
    renderable.shader = shaders['color_without_texture'];
    renderable.orientation.translateTo(0,0,1);
    logger.level = Logger.DEBUG;
    var img = new Image();
    img.onload = function() {
      var texture = gl.createTexture();
      gl.bindTexture(gl.TEXTURE_2D, texture);  
      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);  
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);  
      gl.generateMipmap(gl.TEXTURE_2D);  
      gl.bindTexture(gl.TEXTURE_2D, null);
      renderable.texture = texture;
      renderable.shader = shaders['color_with_texture'];
    };
    img.src = "http://localhost/images/textures/poormansgrass.png";  
    
    world.camera.translateTo(0,0,10);
  <%end%>
          
  <%content_for :render do%>
    world.camera.look(gl);
    renderable.render();
  <%end%>
</script>

<%content_for :head do%>
  <style>#canvas { float: left; }</style>
<%end%>

<p>This test demonstrates use of the JavaScript <strong>Renderable</strong> function, which allows a standard object to be
created by passing only an initialization function and an update function. All other functionality is added by the
Renderable function.</p>
<p>See this example's source code for more details.</p>