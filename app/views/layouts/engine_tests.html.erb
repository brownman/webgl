<!DOCTYPE html>
<html>
<head>
  <title>Rails/WebGL Tests</title>
  <%= stylesheet_link_tag :all %>
  <%= javascript_include_tag :defaults %>
  <%= csrf_meta_tag %>
  <%=yield :head%>
  <script type="text/javascript" src="/javascripts/sylvester.js"></script>
  <script type="text/javascript" src="/javascripts/sylvester-ext.js"></script>
  <script type="text/javascript" src="/javascripts/gl-utils.js"></script>
  <script type="text/javascript" src="/javascripts/webgl.js"></script>
  <script type="text/javascript" src="/javascripts/engine/core.js"></script>
  <script type="text/javascript" src="/javascripts/engine/assertions.js"></script>
  <script type="text/javascript" src="/javascripts/engine/vector.js"></script>
  <script type="text/javascript" src="/javascripts/engine/plane.js"></script>
  <script type="text/javascript" src="/javascripts/engine/frustum.js"></script>
  <script type="text/javascript" src="/javascripts/engine/camera.js"></script>
  <script type="text/javascript" src="/javascripts/objects/renderable.js"></script>
  <script type="text/javascript" src="/javascripts/systems/particle_system.js"></script>
  <script type="text/javascript" src="/javascripts/systems/particle_manager.js"></script>
  <script type="text/javascript" src="/javascripts/engine/shader.js"></script>
  <script type="text/javascript" src="/javascripts/engine/world.js"></script>
  <script type="text/javascript" src="/javascripts/engine/context.js"></script>
  <script type="text/javascript" src="/javascripts/engine/buffer.js"></script>
  <script type="text/javascript" src="/javascripts/engine/texture.js"></script>
  <script type="text/javascript" src="/javascripts/engine/mesh.js"></script>
  <%dependencies.each do |fi| %>
    <%=javascript_include_tag fi%>
  <%end%>
  
  <script type="text/javascript">
    // this is used to disable context.checkError(), which is slow.
    // it may be worth noting that context.checkError() is particularly
    // slow on Chrome; FF gets a much better framerate (40+).
    var RELEASE = false;
    var context = null;
    var gl = null;
    var frame_count = 0;
    var world;
    var particle_systems = <%=particle_systems.to_json%>;
    
    particle_systems.create = function(name, _world) {
      if (!_world) _world = world;
      if (particle_systems[name])
      {
        var ps = new ParticleSystem(particle_systems[name]);
        _world.particle_systems.add(ps);
        return ps;
      }
      else
        throw new Error("Particle system not found: "+name);
    };
    
    particle_systems.clear = function(_world) {
      if (!_world) _world = world;
      _world.particle_systems.clear();
    };
    
    <%=yield :global%>
    
    function drawScene() {
      frame_count += 1;

      <%=render_content = yield :render%>
      context.checkError();
    }
  
    function webGLStart() {
      logger.attempt("webGLStart", function() {
        context = new WebGLContext('canvas', <%=shaders.to_json%>);
        gl = context.gl;
        world = context.world = <%=world.to_js.html_safe%>;
        context.world.context = context;
        
        <%if !render_content.blank?%>
          context.render = drawScene;
        <%end%>

        logger.level = Logger.DEBUG;
        if ($('logger')) $('logger').update(logger);
        
        var canvas = document.getElementById("canvas");
        
        canvas.onclick = canvas_clicked;
        canvas.onmousemove = mouse_moved;
        canvas.onmouseover = mouse_over;
        canvas.onmouseout  = mouse_out;
        canvas.onmousedown = mouse_down;
        canvas.onmouseup   = mouse_up;
        
        initializationComplete();
        context.checkError();
        <%=yield :init%>
        context.checkError();
        
        setInterval(calcFramerate, 1000);
      });
    }
    
    function calcFramerate() {
      document.getElementById('framerate').innerHTML = "FPS: "+(world.framerate || frame_count);
      frame_count = 0;
    }
            
    function canvas_clicked(event) {
      logger.attempt("canvas_clicked", function() {
        <%=yield :canvas_clicked%>
      });
    }
          
    function mouse_moved(event) {
      var self = this;
      logger.attempt("mouse_moved", function() {
        // FIXME doesn't account for scroll offsets
        mouse.overCanvas = true;
        mouse.offsetx = mouse.x;
        mouse.offsety = mouse.y;
        mouse.x = event.clientX - $(self).cumulativeOffset()[0]-1;
        mouse.y = event.clientY - $(self).cumulativeOffset()[1]-1;
        // add scroll offsets
        if (window.pageXOffset)
        {
          mouse.x += window.pageXOffset;
          mouse.y += window.pageYOffset;
        }
        else
        { 
          mouse.x += document.body.scrollLeft;
          mouse.y += document.body.scrollTop;
        }
        if (mouse.offsetx)
          mouse.diffx = mouse.x - mouse.offsetx;
        if (mouse.offsety)
          mouse.diffy = mouse.y - mouse.offsety;
  
        if (mouse.down == null) {
          <%=yield :mouse_moved%>
        }
        else
        {
          <%=yield :mouse_dragged%>
        }
      });
    }
          
    function mouse_over(event) {
      logger.attempt("mouse_over", function() {
        <%=yield :mouse_over%>
      });
    }
          
    function mouse_out(event) {
      logger.attempt("mouse_out", function() {
        <%=yield :mouse_out%>
      });
    }
          
    function mouse_down(event) {
      logger.attempt("mouse_down", function() {
        var button = event.which;
        
        mouse.down = mouse.down || {count:0,down:{}};
        button = mouse.down["button"+button] = {at:[mouse.x,mouse.y]};
        
        <%=yield :mouse_pressed%>
      });
    }
          
    function mouse_up(event) {
      logger.attempt("mouse_up", function() {
        if (mouse.down)
        {
          mouse.down.count--;
          if (mouse.down.count <= 0)
            mouse.down = null;
        }
      
        <%=yield :mouse_released%>
      });
    }
          
    Event.observe("body", "load", function() {
      
    });
  </script>
  
  <style>
    #canvas { float: left; margin-right: 1em; }
    <%=yield :style%>
  </style>
</head>
  <body onload="webGLStart();">

    <div id="framerate" style="float:left;width:100px;">Calculating...</div>
      <div style="float:left;width:100px;"><a href="#" onclick='$("logger").toggle();return false;'>See Log</a></div>
      <div style="clear:right;"><%=link_to "Back to Index", :action => 'index'%></div>
      <div style='clear:both;white-space:pre;font-family:monospace;height:10em;overflow:auto;display:none;' id="logger">
    </div>
    <canvas id="canvas" style="border: none;" width="800" height="500"></canvas>
    <%=yield%>
    
    <p>
      <%=link_to "See the Source Code", File.join("http://github.com/sinisterchipmunk/webgl/tree/master/app/views/",
                                                  params[:controller], "#{params[:action]}.html.erb")%>
      <br/>
      <%=link_to "Thoughts in Computation", "http://thoughtsincomputation.com"%>
    </p><p>
      Although designed for Firefox, all demos have been tested with Chrome and Safari. Be sure to use a WebGL-enabled
      browser or they'll fail.
    </p>
    
    <%=render :partial => 'engine_tests/comments'%>
  </body>
</html>
